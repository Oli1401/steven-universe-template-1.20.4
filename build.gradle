plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here
	mavenCentral()
	// Ensure Fabric artifacts are available
	maven { url = "https://maven.fabricmc.net/" }
}

loom {
	// Automatically separates client and common source sets
	splitEnvironmentSourceSets()

	mods {
		"steven-universe" {
			sourceSet sourceSets.main   // Common source set in src/main
			sourceSet sourceSets.client // Client-specific source set in src/client
		}
	}
}

dependencies {
	// Minecraft version
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	// Yarn mappings (official Minecraft mappings)
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	// Fabric Loader
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Add client-only dependencies if needed
	clientImplementation "com.mojang:minecraft:${project.minecraft_version}" // Minecraft client package (optional)

	// Add necessary libraries or other API dependencies here
	// modImplementation "modid:mod-version"
}

processResources {
	// Replace placeholders like ${version} in fabric.mod.json
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17 // Ensure compatibility with Java 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
}